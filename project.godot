; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "DocItem",
"class": "ArgumentDocItem",
"language": "GDScript",
"path": "res://addons/silicon.util.custom_docs/doc_item/argument_doc_item.gd"
}, {
"base": "Reference",
"class": "AuthProvider",
"language": "GDScript",
"path": "res://addons/godot-firebase/auth/auth_provider.gd"
}, {
"base": "DocItem",
"class": "ClassDocItem",
"language": "GDScript",
"path": "res://addons/silicon.util.custom_docs/doc_item/class_doc_item.gd"
}, {
"base": "DocItem",
"class": "ConstantDocItem",
"language": "GDScript",
"path": "res://addons/silicon.util.custom_docs/doc_item/constant_doc_item.gd"
}, {
"base": "Reference",
"class": "DocExporter",
"language": "GDScript",
"path": "res://addons/silicon.util.custom_docs/doc_exporter/doc_exporter.gd"
}, {
"base": "Reference",
"class": "DocItem",
"language": "GDScript",
"path": "res://addons/silicon.util.custom_docs/doc_item/doc_item.gd"
}, {
"base": "AuthProvider",
"class": "FacebookProvider",
"language": "GDScript",
"path": "res://addons/godot-firebase/auth/providers/facebook.gd"
}, {
"base": "HTTPRequest",
"class": "FirebaseAuth",
"language": "GDScript",
"path": "res://addons/godot-firebase/auth/auth.gd"
}, {
"base": "Node",
"class": "FirebaseDatabase",
"language": "GDScript",
"path": "res://addons/godot-firebase/database/database.gd"
}, {
"base": "Node",
"class": "FirebaseDatabaseReference",
"language": "GDScript",
"path": "res://addons/godot-firebase/database/reference.gd"
}, {
"base": "Node",
"class": "FirebaseDatabaseStore",
"language": "GDScript",
"path": "res://addons/godot-firebase/database/database_store.gd"
}, {
"base": "Node",
"class": "FirebaseDynamicLinks",
"language": "GDScript",
"path": "res://addons/godot-firebase/dynamiclinks/dynamiclinks.gd"
}, {
"base": "Node",
"class": "FirebaseFirestore",
"language": "GDScript",
"path": "res://addons/godot-firebase/firestore/firestore.gd"
}, {
"base": "Node",
"class": "FirebaseFunctions",
"language": "GDScript",
"path": "res://addons/godot-firebase/functions/functions.gd"
}, {
"base": "Resource",
"class": "FirebaseResource",
"language": "GDScript",
"path": "res://addons/godot-firebase/database/resource.gd"
}, {
"base": "Node",
"class": "FirebaseStorage",
"language": "GDScript",
"path": "res://addons/godot-firebase/storage/storage.gd"
}, {
"base": "Reference",
"class": "FirebaseUserData",
"language": "GDScript",
"path": "res://addons/godot-firebase/auth/user_data.gd"
}, {
"base": "Reference",
"class": "FirestoreCollection",
"language": "GDScript",
"path": "res://addons/godot-firebase/firestore/firestore_collection.gd"
}, {
"base": "Reference",
"class": "FirestoreDocument",
"language": "GDScript",
"path": "res://addons/godot-firebase/firestore/firestore_document.gd"
}, {
"base": "Reference",
"class": "FirestoreQuery",
"language": "GDScript",
"path": "res://addons/godot-firebase/firestore/firestore_query.gd"
}, {
"base": "Reference",
"class": "FirestoreTask",
"language": "GDScript",
"path": "res://addons/godot-firebase/firestore/firestore_task.gd"
}, {
"base": "Reference",
"class": "FunctionTask",
"language": "GDScript",
"path": "res://addons/godot-firebase/functions/function_task.gd"
}, {
"base": "AuthProvider",
"class": "GitHubProvider",
"language": "GDScript",
"path": "res://addons/godot-firebase/auth/providers/github.gd"
}, {
"base": "AuthProvider",
"class": "GoogleProvider",
"language": "GDScript",
"path": "res://addons/godot-firebase/auth/providers/google.gd"
}, {
"base": "DocItem",
"class": "MethodDocItem",
"language": "GDScript",
"path": "res://addons/silicon.util.custom_docs/doc_item/method_doc_item.gd"
}, {
"base": "DocItem",
"class": "PropertyDocItem",
"language": "GDScript",
"path": "res://addons/silicon.util.custom_docs/doc_item/property_doc_item.gd"
}, {
"base": "DocItem",
"class": "SignalDocItem",
"language": "GDScript",
"path": "res://addons/silicon.util.custom_docs/doc_item/signal_doc_item.gd"
}, {
"base": "Reference",
"class": "StorageReference",
"language": "GDScript",
"path": "res://addons/godot-firebase/storage/storage_reference.gd"
}, {
"base": "Reference",
"class": "StorageTask",
"language": "GDScript",
"path": "res://addons/godot-firebase/storage/storage_task.gd"
}, {
"base": "AuthProvider",
"class": "TwitterProvider",
"language": "GDScript",
"path": "res://addons/godot-firebase/auth/providers/twitter.gd"
} ]
_global_script_class_icons={
"ArgumentDocItem": "",
"AuthProvider": "",
"ClassDocItem": "",
"ConstantDocItem": "",
"DocExporter": "",
"DocItem": "",
"FacebookProvider": "",
"FirebaseAuth": "",
"FirebaseDatabase": "",
"FirebaseDatabaseReference": "",
"FirebaseDatabaseStore": "",
"FirebaseDynamicLinks": "",
"FirebaseFirestore": "",
"FirebaseFunctions": "",
"FirebaseResource": "",
"FirebaseStorage": "",
"FirebaseUserData": "",
"FirestoreCollection": "",
"FirestoreDocument": "",
"FirestoreQuery": "",
"FirestoreTask": "",
"FunctionTask": "",
"GitHubProvider": "",
"GoogleProvider": "",
"MethodDocItem": "",
"PropertyDocItem": "",
"SignalDocItem": "",
"StorageReference": "",
"StorageTask": "",
"TwitterProvider": ""
}

[application]

config/name="Clikcer"
config/description="The game now makes its way natively to PC and Mobile platforms!"
run/main_scene="res://scenes/Login.tscn"
config/use_custom_user_dir=true
boot_splash/image="res://resources/icons/Icon.png"
boot_splash/bg_color=Color( 0.941176, 0.941176, 0.941176, 1 )
config/icon="res://resources/icons/Icon.png"
config/windows_native_icon="res://resources/icons/icon.ico"

[autoload]

Global="*res://scripts/GLOBAL.gd"
Firebase="*res://addons/godot-firebase/firebase/firebase.tscn"

[display]

window/size/width=490
window/size/height=685
window/handheld/orientation="portrait"
mouse_cursor/custom_image_hotspot=Vector2( 10, 0 )
window/stretch/mode="2d"
window/stretch/aspect="expand"

[editor_plugins]

enabled=PoolStringArray( "res://addons/godot-firebase/plugin.cfg", "res://addons/http-sse-client/plugin.cfg", "res://addons/onscreenkeyboard/plugin.cfg", "res://addons/silicon.util.custom_docs/plugin.cfg" )

[gdnative]

singletons=[  ]

[gui]

common/drop_mouse_on_gui_input_disabled=true

[locale]

locale_filter=[ 0, [ "en_US" ] ]

[physics]

common/enable_pause_aware_picking=true

[rendering]

environment/default_environment="res://default_env.tres"
